
import streamlit as st
from streamlit_gsheets import GSheetsConnection
from scipy.stats import chi2_contingency
import pandas as pd
import plotly.express as px
import plotly.graph_objects as go

st.set_page_config(page_title="An√°lise de Independ√™ncia", page_icon="üìä", layout="wide")

st.title("An√°lise de Independ√™ncia")

# Load the data
def load_main_dataframe(worksheet):
    conn = st.connection("gsheets", type=GSheetsConnection)
    df = conn.read(worksheet=worksheet)
    return df

df = load_main_dataframe("base_respostas")
filtered_df = df[df['Curso Matriculado'] != "Outro"].copy()

# Apply mappings to create grouped columns
mappings = {
    "Desempenho Acad√™mico": {
        "column": "Como voc√™ avalia seu desempenho acad√™mico em termos de notas e possibilidade de reprova√ß√µes ou jubilamento?",
        "mapping": {
        "Estou com dificuldades e em risco de reprova√ß√µes ou jubilamento.": "Baixo ou Mediano",
        "Minhas notas s√£o medianas, mas consigo me manter regular.": "Baixo ou Mediano",
        "Tenho boas notas e estou longe de risco de jubilamento.": "Boas Notas"
        },
    },
    "Qualidade das Aulas": {
        "column": "Avalia√ß√£o do Curso [Como voc√™ avalia a qualidade das aulas no seu Instituto?]",
        "mapping": {0: "Baixa", 1: "Baixa", 2: "Baixa",3: "Alta", 4: "Alta", 5: "Alta"},
    },
    "Planejamento Alinhado": {
        "column": "Avalia√ß√£o do Curso [O planejamento do seu curso √© alinhado com sua futura √°rea de atua√ß√£o?]",
        "mapping": {0: "Desalinhado",1: "Desalinhado",2: "Desalinhado",3: "Alinhado",4: "Alinhado",5: "Alinhado"
    },
    },
    "Prepara√ß√£o para o Mercado": {
        "column": "Avalia√ß√£o do Curso [Voc√™ se sente preparado para o mercado de trabalho?]",
        "mapping": {0: "N√£o Preparado", 1: "N√£o Preparado", 2: "N√£o Preparado", 3: "Preparado", 4: "Preparado", 5: "Preparado"},
    },
    "Identifica√ß√£o com o Curso": {
        "column": "Voc√™ sente que se identifica com o curso em que est√° matriculado?",
        "mapping": {
            "Em parte, mas tenho d√∫vidas.": "Parcial",
            "Sim, me identifico completamente.": "Total",
        },
    },
    "Expectativas Atendidas": {
        "column": "O curso tem atendido √†s suas expectativas desde que voc√™ iniciou?",
        "mapping": {
            "N√£o, estou completamente decepcionada.": "Nada ou Parcialmente Atendidas",
            "Sim, est√° dentro ou acima do esperado.": "Atendidas",
        },
    },
    "Impacto na Sa√∫de": {
        "column": "O curso tem impactado sua sa√∫de f√≠sica ou mental de alguma forma?",
        "mapping": {
            "Sim, tem afetado minha sa√∫de f√≠sica e/ou mental de maneira significativa.": "Impacto Alto ou Mediano",
            "N√£o, consigo manter meu bem-estar f√≠sico e mental.": "Impacto Baixo",
        },
    },
    "Equil√≠brio Vida Pessoal": {
        "column": "Voc√™ consegue equilibrar suas responsabilidades acad√™micas com sua vida pessoal?",
        "mapping": {
            "N√£o, est√° sendo muito dif√≠cil ou imposs√≠vel conciliar.": "Dificuldade alta ou m√©dia",
            "Sim, consigo gerenciar bem.": "Pouca dificuldade",
        },
    },
    "Infraestrutura F√≠sica": {
        "column": "Avalia√ß√£o do Curso [Como voc√™ avalia a infraestrutura f√≠sica do seu Instituto?]",
        "mapping": {0: "Insuficiente", 1: "Insuficiente", 2: "Insuficiente", 3: "Adequada", 4: "Adequada", 5: "Adequada"},
    },
    "Suporte Acad√™mico": {
        "column": "Avalia√ß√£o do Curso [Como voc√™ avalia o suporte acad√™mico oferecido pelas disciplinas?]",
        "mapping": {0: "Insuficiente", 1: "Insuficiente", 2: "Insuficiente", 3: "Adequado", 4: "Adequado", 5: "Adequado"},
    },
    "Tipo de Escola": {
        "column": "Em que tipo de escola voc√™ estudou a maior parte do Ensino m√©dio?",
        "mapping": {
            "Mista (alternou entre p√∫blica e privada)": "P√∫blica/Mista",
            "Privada": "Privada",
            "P√∫blica": "P√∫blica/Mista",
        },
    },
}

for key, value in mappings.items():
    filtered_df[key] = filtered_df[value["column"]].map(value["mapping"])

# Define hypotheses
hypotheses = [
    ("Desempenho Acad√™mico", "Qualidade das Aulas"),
    ("Planejamento Alinhado", "Prepara√ß√£o para o Mercado"),
    ("Identifica√ß√£o com o Curso", "Expectativas Atendidas"),
    ("Impacto na Sa√∫de", "Equil√≠brio Vida Pessoal"),
    ("Infraestrutura F√≠sica", "Suporte Acad√™mico"),
    ("Desempenho Acad√™mico", "Tipo de Escola"),
]

# Create the summary table
summary_data = []
for hypo in hypotheses:
    contingency_table = pd.crosstab(filtered_df[hypo[0]], filtered_df[hypo[1]])
    st.write(hypo)
    st.dataframe(contingency_table)
    chi2, p_value, dof, _ = chi2_contingency(contingency_table, correction=False)
    summary_data.append({"Hip√≥tese": f"{hypo[0]} X {hypo[1]}", "Qui Quadrado": chi2, "p-value": p_value, "Graus de Liberdade": dof})

summary_df = pd.DataFrame(summary_data)

# Display the summary table
st.subheader("Resumo das Hip√≥teses")
st.dataframe(summary_df, use_container_width=True, hide_index=True)

# Graphs for p-value and chi-square comparison
st.subheader("Compara√ß√£o de Resultados")

fig_pvalue = px.bar(summary_df, x="Hip√≥tese", y="p-value", title="Compara√ß√£o de p-values", labels={"p-value": "p-value"})
st.plotly_chart(fig_pvalue, use_container_width=True)

fig_chi2 = px.bar(summary_df, x="Hip√≥tese", y="Qui Quadrado", title="Compara√ß√£o de Qui Quadrado", labels={"Qui Quadrado": "Qui Quadrado"})
st.plotly_chart(fig_chi2, use_container_width=True)
